vars:
  - project:
      aws: cads-it
      directory: .
stages:
  get_training_dataset:
    cmd:
    - >-
      aws s3 cp
      s3://foreshadownba/dvc-data-pipeline-output/ --profile=ipfy
      ${project.directory}/data/input/nba_training_dataset.csv
    outs:
      - ${project.directory}/data/input/nba_training_dataset.csv
  data_process:
    cmd: python -m src.data_process --config=params.yaml
    deps:
      - src/data_process.py
      - ${project.directory}/data/input/nba_training_dataset.csv
    params:
      - base
      - get_training_dataset
      - data_process
    outs:
      - ${project.directory}/data/processed/nba_training_dataset_processed.csv
  data_split:
    cmd: python -m src.data_split --config=params.yaml
    deps:
      - src/data_split.py
      - ${project.directory}/data/processed/nba_training_dataset_processed.csv
    params:
      - base
      - get_training_dataset
      - data_split
    outs:
      - ./data/processed/train_dataset.csv
      - ./data/processed/test_dataset.csv
  baseline_classifier:
    cmd: python -m src.baseline_classifier --config=params.yaml
    deps:
      - src/baseline_classifier.py
      - ./data/processed/train_dataset.csv
      - ./data/processed/test_dataset.csv
    params:
      - base
      - get_training_dataset
      - data_split
      - dummy_classifier
    outs:
      - ./data/reports/baseline_classifier_metrics.json
  feature_selection:
    cmd: python -m src.feature_selection --config=params.yaml
    deps:
      - src/feature_selection.py
      - ./data/processed/train_dataset.csv
      - ./data/processed/test_dataset.csv
    params:
      - base
      - get_training_dataset
      - data_split
      - dummy_classifier
      - feature_selection
    outs:
      - ./data/processed/train_dataset_fs.csv
      - ./data/processed/test_dataset_fs.csv
      - ./data/processed/columns_selected.csv
  initial_multiple_models_training:
      cmd: python -m src.initial_multiple_models_training --config=params.yaml 
      deps:
        - src/initial_multiple_models_training.py
        - ./data/processed/train_dataset_fs.csv
        - ./data/processed/test_dataset_fs.csv
      params:
        - base
        - initial_multiple_models_training
        - data_split
      outs:
        - data/processed/top_3_models.csv
  train:
      cmd: python -m src.train --config=params.yaml
      deps:
        - src/train.py
        - src/training/train_cross_val.py
        - ./data/processed/train_dataset_fs.csv
        - ./data/processed/test_dataset_fs.csv
      params:
        - base
        - train
        - data_split
        - initial_multiple_models_training
      outs:
        - ./models/model.joblib
        - ./models/cross_val_score.csv
        - ./models/cross_val_pred.csv
  evaluate:
      cmd: python3 -m src.evaluate --config=params.yaml
      deps:
        - src/evaluate.py
        - ./models/cross_val_score.csv
        - ./data/reports/baseline_classifier_metrics.json
      params:
        - base
        - train
        - data_split
        - evaluate
      outs:
        - './models/test_df_w_pred.csv'
      plots:
          - data/reports/ConfusionMatrix.png
          - data/reports/shap_beeswarm.png
          - data/reports/shap_plot_bar.png
          - data/reports/bar_plot_data.csv:
              template: bar_horizontal
              x: metric_value
              y: name
      metrics:
      - data/reports/metrics.json:
          cache: false
      




      